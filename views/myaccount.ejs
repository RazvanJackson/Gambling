<% include ./components/header.ejs %>
<script src="https://code.jquery.com/jquery-3.2.1.js" integrity="sha256-DZAnKJ/6XZ9si04Hgrsxu/8s717jcIzLy3oi35EouyE=" crossorigin="anonymous"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/vue"></script>

<div class="columns">
    <div class="column" id="update-app">
        <div class="box custom-box">
           <h1 class="title is-4">Update user</h1>
        </div>
        <div class="box">
            <!-- Email field-->
            <div class="field">
                <label class="label" for="email">Email</label>
                <div class="control">
                    <input class="input" type="text" name="email" index="0" v-model="email" @input="checkEmail()">
                </div>
                <p class="help is-danger email-help" v-if="helpEmail != 'null'">{{helpEmail}}</p>
            </div>

            <!-- Password field-->
            <div class="field">
                <label class="label" for="password">Password</label>
                <div class="control">
                    <input class="input" type="password" name="password" index="2" v-model="password" @input="checkConfirmPassword()">
                </div>
                <p class="help is-danger pasword-help" v-if="helpPassword != 'null'">{{helpPassword}}</p>
            </div>

            <!-- Confirm Password field-->
            <div class="field">
                <label class="label" for="confirmpassword">Confirm Password</label>
                <div class="control">
                    <input class="input" type="password" name="confirmpassword" index="3" v-model="confirmpassword" @input="checkConfirmPassword()">
                </div>
                <p class="help is-danger confirmpassword-help" v-if="helpConfirmPassword != 'null'">{{helpConfirmPassword}}</p>
            </div>

            <!-- Update button field-->
            <div class="field">
                <button class="button is-primary" type="submit" @click.self.prevent="update()">Update</button>
            </div>
        </div>
        <div class="submit-message">{{helpSubmit}}</div>
    </div>
    <div class="column">
        <div class="box custom-box">
            <h1 class="title is-4">History</h1>
        </div>
        <div id="history-app">
            <div class="history-games-list" >
                <div class="columns history-columns is-gapless">
                    <div class="column">
                        <button class="button history-button is-dark" name="current-history" @click.self.prevent = "getHistory(event)">Roulette</button> 
                    </div>
                    <div class="column">
                        <button class="button history-button is-dark" name="current-history" @click.self.prevent = "getHistory(event)">Dice</button> 
                    </div>
                    <div class="column">
                        <button class="button history-button is-dark" name="current-history" @click.self.prevent = "getHistory(event)">Versus</button> 
                    </div>
                </div>
            </div>

            <div>
                <div></div>
                <div id="history-message" v-if="currentHistory == null ">Click one of the above games to see your gambling history!</div>
                <table class="table history-table">
                    <thead>
                        <tr v-if="currentHistory == 'Roulette' ">
                            <th>Game ID</th>
                            <th>Player color</th>
                            <th>Winning Color</th>
                            <th>Win/Lose</th>
                        </tr>

                        <tr v-if="currentHistory == 'Dice' ">
                            <th>Game ID</th>
                            <th>Player color</th>
                            <th>Winning Number</th>
                            <th>Win/Lose</th>
                        </tr>
                    </thead>

                    <tbody>
                        
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function(){
        $('.history-button').on('click',function(){
            $('.history-button').removeClass('is-active');
            $(this).addClass('is-active');
        })
    });


    const update = new Vue({
    el: '#update-app',
    data: {
        email: undefined,
        password: undefined,
        confirmpassword: undefined,

        helpEmail: undefined,
        helpPassword: undefined,
        helpConfirmPassword: undefined,

        helpSubmit: undefined,
    },
    methods:{
        checkEmail(){
            if(update.email == '') update.helpEmail = null;
            else{
                $.post('/user/update-validation',{
                    email:this.email
                },function(data){
                    if(data.error == true){
                        update.helpEmail = data.message;
                        $('.email-help').removeClass('is-primary').addClass('is-danger');
                    } 
                else{
                    update.helpEmail = data.message;
                    $('.email-help').removeClass('is-danger').addClass('is-primary');
                } 
                });
            }
        },
        checkPassword(){
            $.post('/user/update-validation',{
                password: this.password
            },function(data){
                if(data.error == true){
                    update.helpPassword = data.message;
                    $('.password-help').removeClass('is-primary').addClass('is-danger');

                } 
                else{
                    update.helpPassword = data.message;
                    $('.password-help').removeClass('is-danger').addClass('is-primary');
                } 
             });
        },
        checkConfirmPassword(){
            $.post('/user/update-validation',{
                password: this.password,
                confirmpassword: this.confirmpassword
            },function(data){
                if(data.error == true){
                    update.helpConfirmPassword = data.message;
                    $('.confirmpassword-help').removeClass('is-primary').addClass('is-danger');

                } 
                else{
                    update.helpConfirmPassword = data.message;
                    $('.confirmpassword-help').removeClass('is-danger').addClass('is-primary');
                } 
             });
        },
        update(){
            $.post('/user/update',{
                email: this.email,
                password: this.password,
                confirmpassword: this.confirmpassword
            },function(data){
                if(data.error == true){
                    update.helpSubmit = data.message;
                } 
                else{
                    email = null,
                    password = null,
                    confirmpassword = null,
                    update.helpSubmit = data.message;
                    setTimeout(function(){
                        $('.submit-message').fadeOut();
                    },5000);
                } 
             });    
        },
    }
    });

    const history = new Vue({
        el: '#history-app',
        data:{
            currentHistory : null,
        },
        
        methods:{
            getHistory(event){
                if(this.currentHistory != event.target.innerHTML){
                    $('tbody').empty();
                    this.currentHistory = event.target.innerHTML;
                    $.post('/user/get-history', {history:this.currentHistory},function(data){
                        if(history.currentHistory == 'Roulette'){
                            data.forEach(function(game){
                                game.players.forEach(function(player){
                                    player.bets.forEach(function(bet){
                                        let result;
                                        let isWinner;
                                        if(game.winningColor == bet.choosenColor){
                                            if(bet.choosenColor == 'green') result = '+' + (bet.amount*13);
                                            else result = '+' + bet.amount;
                                            isWinner = 'winner';
                                        } 
                                        else{
                                            result = '-' + bet.amount;
                                            isWinner = 'loser';
                                        } 
                                        $('tbody').append(`<tr class='${isWinner}'><th>${game.rouletteID}</th><th>${bet.choosenColor}</th><th>${game.winningColor}</th><th>${result}</th></tr>`);
                                    })
                                });
                            });
                        }
                        else if(history.currentHistory == 'Dice'){
                            data.forEach(function(bet){
                                let isWinner;
                                let result;
                                if(bet.player.option == 'low' || bet.player.option == 'high'){
                                    if(bet.player.option == 'low' && bet.winningNumber <= 3){
                                        isWinner = 'winner';
                                        result = '+' + bet.player.amount;
                                    }

                                    else if(bet.player.option == 'high' && bet.winningNumber >= 4){
                                        isWinner = 'winner';
                                        result = '+' + bet.player.amount;  
                                    }
                                    
                                    else{
                                        isWinner = 'loser'
                                        result = '-' + bet.player.amount;
                                    } 
                                }
                                else if(bet.player.option == bet.winningNumber){
                                    isWinner = 'winner';
                                    result = '+' + (bet.player.amount*4);  
                                }
                                else{
                                    isWinner = 'loser'
                                    result = '-' + bet.player.amount;
                                }
                                
                                $('tbody').append(`<tr class='${isWinner}'><td>${bet.diceID}</td><td>${bet.player.option}</td><td>${bet.winningNumber}</td><td>${result}</td></tr>`);
                            });
                        }
                    });
                }
                
            },
        }
    });
    
</script>

<style scoped>
#background:after{
    content: "";
    z-index: -1;
    top: 0px;
    bottom: 0px;
    position: absolute;
    background-image: url('/theme-background.jpg');
    background-repeat: repeat;
    background-position: center;
    background-size: cover;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    width: 100%;
    min-height: 100%;
    opacity: .85;
}

.title{
    color: white;
    text-align: center;
}

.table{
    width: 100%;
}

.table tr{
    border: 2.5px solid;
}

.table thead tr th{
    border-top: none;
}

.table tbody th{
    color: white;
    text-align: center;
}
.table tbody td{
    color: white;
    text-align: center;
}


.winner{
    background-color: #23d160;
}

.loser{
    background-color: #fe385f;
}

.history-button{
    border-radius: 0px;
    display: block;
    margin: 0px auto;
    width: 100%;
}
.history-button:hover{
    box-shadow: 0px -2.5px 0px #f98009 inset;
}

.button.is-dark.is-active, .button.is-dark:active,.button.is-dark.is-focused:not(:active), .button.is-dark:focus:not(:active) {
    box-shadow: 0px -2.5px 0px #f98009 inset;
}

#history-message{
    text-align: center;
    background-color: white;
}

#history-roulette{
    border-radius: 5px 0px 0px 5px;
    background-color: #d51d2a;
    color: white;
}

#history-dice{
    background-color:#60bc39;
    color: white;
}

#history-versus{
    border-radius: 0px 5px 5px 0px;
    background-color: #a72b6b;
    color: white;
}

.custom-box{
    color: white;
    background-color: #363636;
}

</style>

<% include ./components/footer.ejs %>