<% include ./components/header.ejs %>

<div class="columns" id="register-app">
    <div class="column is-8 is-offset-2">
        <div class="box is-clearfix">
            <form action="/user/signup" method="POST">
                <!-- Email field-->
                <div class="field">
                    <label class="label" for="email">Email</label>
                    <div class="control">
                        <input class="input" type="text" name="email" index="0" v-model="email" @input="checkEmail()">
                    </div>
                    <p class="help is-danger email-help" v-if="helpEmail != 'null'">{{helpEmail}}</p>
                </div>

                <!-- Username field-->
                <div class="field">
                    <label class="label" for="username">Username</label>
                    <div class="control">
                        <input class="input" type="text" name="username" index="1" v-model="username" @input="checkUsername()">
                    </div>
                    <p class="help is-danger username-help" v-if="helpUsername != 'null'">{{helpUsername}}</p>
                </div>

                <!-- Password field-->
                <div class="field">
                    <label class="label" for="username">Password</label>
                    <div class="control">
                        <input class="input" type="password" name="password" index="2" v-model="password" @input="checkConfirmPassword()">
                    </div>
                    <p class="help is-danger pasword-help" v-if="helpPassword != 'null'">{{helpPassword}}</p>
                </div>

                <!-- Confirm Password field-->
                <div class="field">
                    <label class="label" for="username">Confirm Password</label>
                    <div class="control">
                        <input class="input" type="password" name="confirmpassword" index="3" v-model="confirmpassword" @input="checkConfirmPassword()">
                    </div>
                    <p class="help is-danger confirmpassword-help" v-if="helpConfirmPassword != 'null'">{{helpConfirmPassword}}</p>
                </div>

                <!-- SignUp button field-->
                <div class="field">
                    <button class="button is-primary" type="submit" @click.self.prevent="submitUser()">SignUp</button>
                </div>
            </form>
            <h1 id="submit-message" v-if="submitError == true">{{helpSubmit}}</h1>
            <h1 id="submit-message" v-if="submitError == false">{{helpSubmit}} <a href="/user/login">Click here</a> to login!</h1>
        </div>
    </div>
</div>

<script>
    const app = new Vue({
    el: '#register-app',
    data: {
        email: undefined,
        username: undefined,
        password: undefined,
        confirmpassword: undefined,

        helpEmail: undefined,
        helpUsername: undefined,
        helpPassword: undefined,
        helpConfirmPassword: undefined,

        submitError: undefined,
        helpSubmit: undefined,
        
        disableBtn: true
    },
    methods:{
        checkEmail(){
            if(app.email == '') app.helpEmail = null;
            else{
                $.post('/user/signup',{
                    email:this.email
                },function(data){
                    if(data.error == true){
                        app.helpEmail = data.message;
                        $('.email-help').removeClass('is-primary').addClass('is-danger');
                    } 
                else{
                    app.helpEmail = data.message;
                    $('.email-help').removeClass('is-danger').addClass('is-primary');
                } 
                });
            }
        },
        checkUsername(){
            if(app.username == '') app.helpUsername = null;
            else{
                $.post('/user/signup',{
                    username:this.username
                },function(data){
                if(data.error == true){
                    app.helpUsername = data.message;
                    $('.username-help').removeClass('is-primary').addClass('is-danger');

                } 
                else{
                    app.helpUsername = data.message;
                    $('.username-help').removeClass('is-danger').addClass('is-primary');
                }
                });
            }
        },
        checkPassword(){
            $.post('/user/signup',{
                password: this.password
            },function(data){
                if(data.error == true){
                    app.helpPassword = data.message;
                    $('.password-help').removeClass('is-primary').addClass('is-danger');

                } 
                else{
                    app.helpPassword = data.message;
                    $('.password-help').removeClass('is-danger').addClass('is-primary');
                } 
             });
        },
        checkConfirmPassword(){
            $.post('/user/signup',{
                password: this.password,
                confirmpassword: this.confirmpassword
            },function(data){
                if(data.error == true){
                    app.helpConfirmPassword = data.message;
                    $('.confirmpassword-help').removeClass('is-primary').addClass('is-danger');

                } 
                else{
                    app.helpConfirmPassword = data.message;
                    $('.confirmpassword-help').removeClass('is-danger').addClass('is-primary');
                } 
             });
        },
        submitUser(){
            $.post('/user/signup',{
                username: this.username,
                email: this.email,
                password: this.password,
                confirmpassword: this.confirmpassword
            },function(data){
                if(data.error == true){
                    app.submitError = data.error
                    app.helpSubmit = data.message;

                } 
                else{
                    app.submitError = data.error
                    app.helpSubmit = data.message;
                } 
             });    
        },
    }
});
</script>

<style scoped>
#background {
    display: block;
    position: relative;
    height: calc(100vh - 3.25rem);
}

#background:after{
    content: "";
    z-index: -786;
    top: 0px;
    bottom: 0px;
    position: absolute;
    background-image: url('/theme-background.jpg');
    background-position: center;
    background-size: cover;
    width: 100%;
    height: 100%;
    opacity: .85;
}
</style>

<% include ./components/footer.ejs %>